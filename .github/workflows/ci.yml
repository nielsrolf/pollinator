name: Test

on: 
  pull_request: {}
  push:
    branches: "*"
    tags: "*"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install dependencies with pipenv
        run: |
          pip install ."[test]"
      - run: isort --diff .
      - run: black --check .
      - run: flake8
      # - run: pytest --cov --cov-fail-under=80

  docker-image:
    if:
      contains('
        refs/heads/dev
        refs/heads/main
      ', github.ref)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Build docker image
        run: docker build . -t image:test

      # - name: Smoke test docker image
      #   run: |
      #     docker run --rm middlepollen:test
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Create repository if it doesn't exist yet
        run: aws ecr describe-repositories --repository-names ${{ github.repository }} || aws ecr create-repository --repository-name ${{ github.repository }}

      - name: Tag and push image to Amazon ECR
        env:
          ECR_REGISTRY: 614871946825.dkr.ecr.us-east-1.amazonaws.com #${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.repository }}
          IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
        run: |
          echo Tagging image as $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag image:test $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
